<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8">
<META NAME="bookrevnum" CONTENT="LLESWEBR100500-1409-H-UGD-EN-01">
<META name="pvScheme" content="010203-yymm">
<META name="verttl" content="10.5.0 Update 2014-09">
<META name="PiXprocLocator" content="webreports">
<META mancondkey="lleswebr-igd -- lleswebr-h-agd"><title>Running WebReports</title>
<META NAME="GENERATOR" CONTENT="Modular DocBook HTML Stylesheet Version 1.44">
<META NAME="SECTLVL" CONTENT="2">
<LINK REL="STYLESHEET" TYPE="text/css" HREF="../../ix21.css">

<script language="JavaScript" src="../../llhelp.js"></script>
</HEAD>
<body ONLOAD="checkFrame( 'wr-running-reports.htm' )" CLASS="Body" TEXT="#000000" BGCOLOR="#FFFFFF" link="#003366" alink="#3300FF" vlink="#660033" background="../../images/pattern.gif">

<DIV ID="HL4SRCH">
<DIV CLASS="pagecontent" ID="PAGECONTENT">
<!-- header -->
  <script language="JavaScript">
          var header = new AdminHeader("../../images/");
          header.title1 = 'Working with WebReports';
          header.title2 = 'Running WebReports';
           header.draw();
  </script>

<P class="nr1"><A NAME="TMPID994"></A>By default, running a WebReport causes the combined output of the processed reportview and any data source to be delivered to the user's browser. WebReports can also be “delivered” to other destinations using a variety of Export options. There are three commonly used ways to run a WebReport:</P>
<A NAME="AEN889"></A>
<OL TYPE="1">
<LI class="vlli">
<P class="nr1"><A NAME="AEN890"></A><A NAME="TMPID998"></A><B CLASS="highlight">Selecting the WebReport link from Content Server</B>: where a WebReport is visible in a Content Server container, the name link can be clicked to run the current version of the WebReport. This approach can also be used for versions that have been listed from the functions menu of a WebReport by selecting <B CLASS="guilabel">Properties</B>, then selecting <B CLASS="guilabel">Versions</B>. This differs from normal documents where this action would cause a view or open option to be executed.</P>
<table CLASS="note">
<TR>
<TD FRAME="VOID" CLASS="tabverspace" COLSPAN="2">&nbsp;</TD></TR>
<TR FRAME="VOID">
<TD ALIGN="LEFT" VALIGN="TOP" CLASS="iconcell">
<P CLASS="note"><A NAME="TMP4REF7"></A><IMG ALT="Note" SRC="../../images/pi_note.gif"></IMG></P></TD>
<TD ALIGN="LEFT" CLASS="percontscell">
<P><A NAME="TMPID1005"></A><B CLASS="note">Note: </B><BR>The behavior of the WebReport link can be altered by changing the defaults from a WebReport's functions menu by selecting <B CLASS="guilabel">Properties</B>, then selecting <B CLASS="guilabel">Destination</B>.</P></TD></TR>
<TR>
<TD FRAME="VOID" CLASS="tabverspace" COLSPAN="2">&nbsp;</TD></TR></table></LI>
<LI class="vlli">
<P class="nr1"><A NAME="AEN901"></A><A NAME="TMPID1009"></A><B CLASS="highlight">Selecting the Open option from the functions menu</B>: this performs the same action as clicking the name link.</P></LI>
<LI class="vlli">
<P class="before-ul nr1"><A NAME="AEN904"></A><A NAME="TMPID1012"></A><B CLASS="highlight">Invoking the appropriate WebReport URL</B>: this option can be used to create complex relationships between different objects in Content Server. Examples include:</P><A NAME="AEN908"></A>
<UL>
<LI class="vlli">
<P class="nr1"><A NAME="AEN909"></A><A NAME="TMPID1017"></A>a Content Server Custom View can invoke a WebReport to collect data for display</P></LI>
<LI class="vlli">
<P class="nr1"><A NAME="AEN912"></A><A NAME="TMPID1020"></A>a Content Server WebForm could invoke a WebReport to build form information such as pick lists</P></LI>
<LI class="vlli">
<P class="nr1"><A NAME="AEN915"></A><A NAME="TMPID1023"></A>a WebReport can invoke another WebReport to create relational database type applications</P></LI></UL>
<P><A NAME="TMPID1024"></A>This option can also be used to invoke a WebReport from a Content Server URL object. The reason for using this approach is that it is possible to create unique URLs which include parameters that can be used in the reportview. Any parameters passed in the URL can be referenced within the reportview using special tags. For example, <TT CLASS="literal">[LL_REPTAG_&amp;parmname /]</TT>. Thus multiple URLs can be created to allow a single WebReport to behave in different ways. It is also possible to include input parameters to be passed directly to the underlying data sources. For more information, see <span><A HREF="wr-parameter-info.htm">Using Parameters</A></span>.</P></LI></OL>
<P CLASS="bridgehead-subheading2 BH2SEP"><A NAME="WR-RUNNING-RUNPASS">Passing Parameters</A></P>
<P><A NAME="TMPID1030"></A>When running a WebReport, parameters can be included in the URL for the WebReport itself as well as for the associated data source. For more information, see <span><A HREF="wr-parameter-procedures.htm">WebReport Parameters Procedures</A></span>.</P>
<DIV CLASS="localtoc">
<h2 CLASS="localtoc BH1SEP pagehd"><A NAME="LOCALTOC"></A>Table of Contents&nbsp;&nbsp;</h2>
<ul>
<li><p><A  HREF="wr-formsubmission-mech.htm" revision="">Form Submission Mechanism</A></p></li></ul></DIV>
<P ALIGN="RIGHT"></P></DIV></DIV>

  <script language="JavaScript">
       new AdminFooter("../../images/").draw();
  </script>
</body></HTML>