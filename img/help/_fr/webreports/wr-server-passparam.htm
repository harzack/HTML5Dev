<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8">
<META NAME="bookrevnum" CONTENT="LLESWEBR100500-H-UGD-FR-1">
<META name="pvScheme" content="010203-yymm">
<META name="verttl" content="10.5.0">
<META name="PiXprocLocator" content="webreports">
<META mancondkey="lleswebr-igd -- lleswebr-h-agd"><title>Transmission de paramètres</title>
<META NAME="GENERATOR" CONTENT="Modular DocBook HTML Stylesheet Version 1.44">
<META NAME="SECTLVL" CONTENT="4">
<LINK REL="STYLESHEET" TYPE="text/css" HREF="../../ix21.css">

<script language="JavaScript" src="../../llhelp.js"></script>
</HEAD>
<body ONLOAD="checkFrame( 'wr-server-passparam.htm' )" CLASS="Body" TEXT="#000000" BGCOLOR="#FFFFFF" link="#003366" alink="#3300FF" vlink="#660033" background="../../images/pattern.gif">

<DIV ID="HL4SRCH">
<DIV CLASS="pagecontent" ID="PAGECONTENT">
<!-- header -->
  <script language="JavaScript">
          var header = new AdminHeader("../../images/");
          header.title1 = 'Transmission de données à un script';
          header.title2 = 'Transmission de paramètres';
           header.draw();
  </script>

<P class="nr1"><A NAME="TMPID17201"></A>Lorsque vous appelez un script, vous pouvez transmettre explicitement tout nombre de paramètres. Par exemple, le code suivant passe trois paramètres : <TT CLASS="literal">[LL_WEBREPORT_CALL NAME:myFunc PARM:1234:"a string with spaces":more_data /]</TT> </P>
<P><A NAME="TMPID17203"></A>Les paramètres contenant des espaces peuvent être délimités par des guillemets doubles ou simples. Les paramètres sont transmis à la première fonction déclarée dans le script myFunc. Ils apparaissent sous la forme d'une List Oscript de valeurs dans le deuxième paramètre, après l'Assoc Context. Par exemple : </P>
<DIV title="Le code suivant renvoie '1234-a string with spaces-more_data' à l'affichage de rapport :" CLASS="example">
<P CLASS="example" ALIGN="LEFT"><A NAME="TMP4REF50"></A><B><IMG title="Le code suivant renvoie '1234-a string with spaces-more_data' à l'affichage de rapport :" SRC="../../images/pi_objstart.gif" ALIGN="MIDDLE"> Exemple 1-30 : Le code suivant renvoie <NOBR>1234-a string with spaces-more_data</NOBR> à l'affichage de rapport :</B></P><A NAME="AEN16460"></A>
<PRE 
CLASS="screen"
>[LL_WEBREPORT_STARTSCRIPT NAME:myFunc /]
function String anyName(Dynamic context, List args)
  String s
  s = args[1] + "-" + args[2] + "-" + args[3]
  return s
end
[LL_WEBREPORT_ENDSCRIPT /]</PRE
><IMG title="Le code suivant renvoie '1234-a string with spaces-more_data' à l'affichage de rapport :" SRC="../../images/pi_objend.gif" ALIGN="MIDDLE"></DIV>
<DIV title="L'exemple d'affichage de rapport suivant illustre l'accès aux données dans l'Assoc Context, ainsi que la transmission explicite d'un paramètre au script." CLASS="example">
<P CLASS="example" ALIGN="LEFT"><A NAME="TMP4REF51"></A><B><IMG title="L'exemple d'affichage de rapport suivant illustre l'accès aux données dans l'Assoc Context, ainsi que la transmission explicite d'un paramètre au script." SRC="../../images/pi_objstart.gif" ALIGN="MIDDLE"> Exemple 1-31 : L'exemple d'affichage de rapport suivant illustre l'accès aux données dans l'Assoc Context, ainsi que la transmission explicite d'un paramètre au script.</B></P>
<P class="nr1"><A NAME="TMPID17210"></A>Ce rapport affiche toutes les données provenant d'une source de données, quel que soit le nombre de colonnes renvoyées par la source de données.</P><A NAME="AEN16464"></A>
<PRE 
CLASS="screen"
>[LL_WEBREPORT_STARTSCRIPT NAME:doRow /]
Function String doRow (Dynamic c, List args)
  Integer row, col
  String s =''
  row = Str.StringToInteger(args[1])
  if isDefined(row)
    for col=1 to length(c.data[1])
      s+= Str.Format( '&lt;<I
CLASS="varname"
>TD</I
>>%1&lt;<I
CLASS="varname"
>/TD</I
>>', c.data[row][col])
    end
  end
  return s
end
[LL_WEBREPORT_ENDSCRIPT /]

[LL_WEBREPORT_STARTSCRIPT NAME:doRowHeader /]
Function String doRowHeader (Dynamic c, List args)
  String field
  String s =''
  List fields
  if isDefined(c.data)  // check there is data
    fields = RecArray.FieldNames(c.data)
    for field in fields
      s+= Str.Format( '&lt;<I
CLASS="varname"
>TD</I
>>%1&lt;<I
CLASS="varname"
>/TD</I
>>', field)
    end
  end
  return s
end
[LL_WEBREPORT_ENDSCRIPT /]

&lt;<I
CLASS="varname"
>TABLE</I
>>
&lt;<I
CLASS="varname"
>TR</I
>>
[LL_WEBREPORT_CALL NAME:doRowHeader /]
&lt;<I
CLASS="varname"
>/TR</I
>>

[LL_WEBREPORT_STARTROW /]
&lt;<I
CLASS="varname"
>TR CLASS="[LL_REPTAG_ROWNUM ODDEVEN:Browserow1:Browserow2 /]" VALIGN="CENTER" NOWRAP ALIGN="LEFT"</I
>>
[LL_WEBREPORT_CALL NAME:doRow PARM:[LL_REPTAG_ROWNUM /] /]
&lt;<I
CLASS="varname"
>/TR</I
>>
[LL_WEBREPORT_ENDROW /]

&lt;<I
CLASS="varname"
>/TABLE</I
>></PRE
><IMG title="L'exemple d'affichage de rapport suivant illustre l'accès aux données dans l'Assoc Context, ainsi que la transmission explicite d'un paramètre au script." SRC="../../images/pi_objend.gif" ALIGN="MIDDLE"></DIV>
<P ALIGN="RIGHT"></P></DIV></DIV>

  <script language="JavaScript">
       new AdminFooter("../../images/").draw();
  </script>
</body></HTML>