<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8">
<META NAME="bookrevnum" CONTENT="LLESWEBR100500-H-UGD-FR-1">
<META name="pvScheme" content="010203-yymm">
<META name="verttl" content="10.5.0">
<META name="PiXprocLocator" content="webreports">
<META mancondkey="lleswebr-igd -- lleswebr-h-agd"><title>Exemples</title>
<META NAME="GENERATOR" CONTENT="Modular DocBook HTML Stylesheet Version 1.44">
<META NAME="SECTLVL" CONTENT="3">
<LINK REL="STYLESHEET" TYPE="text/css" HREF="../../ix21.css">

<script language="JavaScript" src="../../llhelp.js"></script>
</HEAD>
<body ONLOAD="checkFrame( 'wr-services-exampl.htm' )" CLASS="Body" TEXT="#000000" BGCOLOR="#FFFFFF" link="#003366" alink="#3300FF" vlink="#660033" background="../../images/pattern.gif">

<DIV ID="HL4SRCH">
<DIV CLASS="pagecontent" ID="PAGECONTENT">
<!-- header -->
  <script language="JavaScript">
          var header = new AdminHeader("../../images/");
          header.title1 = 'Services WR';
          header.title2 = 'Exemples';
           header.draw();
  </script>

<DIV title=" executeWRService( serviceType, responseTarget, parmList, responseType, getPost)" CLASS="example">
<P CLASS="example" ALIGN="LEFT"><A NAME="WR-SERVICES-EXECWRS1-EX"></A><B><IMG title=" executeWRService( serviceType, responseTarget, parmList, responseType, getPost)" SRC="../../images/pi_objstart.gif" ALIGN="MIDDLE"> Exemple 1-34 :  executeWRService( serviceType, responseTarget, parmList, responseType, getPost)</B></P>
<P class="nr1"><A NAME="TMPID18193"></A>Cet exemple montre deux façons différentes d'appeler le service <TT CLASS="literal">gettagdata</TT> à l'aide de la fonction prédéfinie : <TT CLASS="literal">executeWRService</TT>. Dans la première instance, nous avons rédigé une fonction spéciale nommée <TT CLASS="literal">handleServiceJSON</TT> conçue pour « évaluer » les données JSON (autrement dit, convertir les données JSON en objets Javascript) et utilisons les structures JavaScript qui en résultent pour afficher le résultat de la requête. </P>
<P><A NAME="TMPID18198"></A>Dans cette requête, nous utilisons <TT CLASS="literal">&amp;tagdata=</TT> avec un ID de données, puis utilisons la variation de sous-balise <TT CLASS="literal">NODEINFO:NAME</TT> pour rechercher le nom d'un élément. Notez que nous avons demandé le responseType « <TT CLASS="literal">json</TT> », la structure de données qui en résulte comprend un champ nommé « erreur » qui indique si les données sont valides ou non. </P>
<P><A NAME="TMPID18204"></A>Dans la fonction <TT CLASS="literal">handleServiceJSON</TT>, nous utilisons ce champ pour déterminer s'il faut signaler une erreur ou afficher le contenu. Dans la seconde instance, get URL button, nous transmettons simplement le nom d'un objet HTML à la page. Lorsque la requête revient de Content Server, elle insère automatiquement le texte qui en résulte dans le composant HTML spécifié. Comme nous voulons simplement le texte archivé vers la page ,et que nous ne prévoyons pas d'analyser la réponse à la recherche d'erreurs ou de la traiter par programmation, le type responseType « <TT CLASS="literal">string</TT> » a été sélectionné dans cet exemple. </P>
<P><A NAME="TMPID18209"></A><A NAME="AEN17452"></A>
<PRE 
CLASS="screen"
>&#13;&lt;SCRIPT SRC="[LL_REPTAG_LIBPATH /]ajax.js"&gt;&lt;/SCRIPT&gt;
&lt;script&gt;

function handleServiceJSON(request) {
    var rt = request.responseText;
    var jsvar = eval('(' + rt + ')')
    var error = jsvar.error;
    var content = jsvar.content;
    if (error == 'true') {
         alert('error text is: ' + content);
    } else {
         alert('Object name is:' + content);
    }
}

function getName(did){
     did = document.getElementById('dataid').value;
     getNameParms = '&amp;tagdata=' + did + '&amp;subtags=nodeinfo:name';
     executeWRService( 'gettagdata', handleServiceJSON,getNameParms,'json');
}

function showURL(did){
     did = document.getElementById('dataid').value;
     getURLparms = '&amp;tagdata=' + did + '&amp;subtags=LLURL:OPEN';
     executeWRService('gettagdata', 'displayname', getURLparms,'string');
}
&lt;/script&gt;

&lt;input type=text value="[LL_REPTAG_MYID /]" ID=dataid&gt;&amp;nbsp;&amp;nbsp;URL:&amp;nbsp;&lt;SPAN ID=displayname&gt;&lt;/SPAN&gt;&lt;br&gt;
&lt;input type=button value="Get Item Name" onclick=getName()&gt;&amp;nbsp;&lt;input type=button value="Get URL" onclick=showURL()&gt;</PRE
> </P><IMG title=" executeWRService( serviceType, responseTarget, parmList, responseType, getPost)" SRC="../../images/pi_objend.gif" ALIGN="MIDDLE"></DIV>
<DIV title="executeWRService( serviceType, responseTarget, parmList, responseType, getPost)" CLASS="example">
<P CLASS="example" ALIGN="LEFT"><A NAME="WR-SERVICES-EXECWRS2-EX"></A><B><IMG title="executeWRService( serviceType, responseTarget, parmList, responseType, getPost)" SRC="../../images/pi_objstart.gif" ALIGN="MIDDLE"> Exemple 1-35 : executeWRService( serviceType, responseTarget, parmList, responseType, getPost)</B></P>
<P class="nr1"><A NAME="TMPID18213"></A>Cet exemple illustre l'utilisation du service <TT CLASS="literal">getstatictags</TT>. Le service est appelé à l'aide de la fonction <TT CLASS="literal">executeWRService</TT> dans <TT CLASS="filename">ajax.js</TT>. A l'aide de l'identifiant « <TT CLASS="literal">getstatictags</TT> » pour sélectionner le service approprié, une fonction nommée <TT CLASS="literal">handleStaticTags</TT>, spécialement rédigée pour cet exemple d'application, est transmise à la fonction <TT CLASS="literal">executeWRService</TT> qui, à son tour, configure une requête vers Content Server. La requête est configurée de façon à ce que, quand cette requête revient de Content Server, la fonction <TT CLASS="literal">handleStaticTags</TT> soit appelée. Dans cet exemple, nous avons rédigé le code de <TT CLASS="literal">handleStaticTags</TT> pour réupérer la structure JSON de <TT CLASS="literal">request.responseText</TT>, la convertir en structure JavaScript, puis la parcourir de façon à afficher toutes les valeurs de balises statiques renvoyées à partir de Content Server. </P>
<P><A NAME="TMPID18227"></A><A NAME="AEN17470"></A>
<PRE 
CLASS="screen"
>&lt;SCRIPT SRC="[LL_REPTAG_LIBPATH /]ajax.js"&gt;&lt;/SCRIPT&gt;
&lt;script&gt;

function handleStaticTags(request) {

     var rt = request.responseText;
     var jsvar = eval('(' + rt + ')')
     var error = jsvar.error;
     var content = jsvar.content;     // This should be an array of tags

     if (error) {
          alert('error text is: ' + content);
     } else {
          tempStr = '';
          for (tag in content) {
              tempStr += tag + ' = ' + content[tag] + '&lt;br&gt;';
          }
          document.getElementById('display').innerHTML = tempStr;

     }
}

function getStaticTags(){
     executeWRService( 'getstatictags', handleStaticTags,'json');
}

&lt;/script&gt;
&lt;input type=button value="Get Static Tags" onclick=getStaticTags()&gt;
&lt;hr&gt;
&lt;DIV ID="display"&gt;

&lt;/DIV&gt;</PRE
></P><IMG title="executeWRService( serviceType, responseTarget, parmList, responseType, getPost)" SRC="../../images/pi_objend.gif" ALIGN="MIDDLE"></DIV>
<P ALIGN="RIGHT"></P></DIV></DIV>

  <script language="JavaScript">
       new AdminFooter("../../images/").draw();
  </script>
</body></HTML>