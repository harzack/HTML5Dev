<HTML>
	<HEAD>
		<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8">
		<TITLE>Manage WebReports Conversion</TITLE>
		<link rel="stylesheet" href="../../ix21.css" type="text/css">
		<script language="JavaScript" src="../../llhelp.js"></script>
	</HEAD>

	<BODY ONLOAD="checkFrame( 'webrep_managecon.htm' )" CLASS="Body" TEXT="#000000" BGCOLOR="#FFFFFF" link="#003366" alink="#3300FF" vlink="#660033" background="../../images/pattern.gif">
		<A NAME="TopOfPage"> </A><A NAME="P8_93"></A>
		<SCRIPT LANGUAGE="JavaScript">
			var header = new AdminHeader();
			header.title1 = 'WebReports Administration: OpenText Content Server Admin Online Help';
			header.title2 = 'Manage WebReports Conversion';
			header.draw();
		</SCRIPT>

		<P CLASS="body">
			The conversion page allows you to add, view, or modify information about the WebReports conversion directories. These directories are used in conjunction with a conversion tool such as Adlib eXpress to allow WebReports to perform exports in PDF, or if required, other formats. 
		</p>
		<P CLASS="body">
			When a user determines they want a WebReport to be formatted in, say PDF, the reportview is rendered in the format they have defined in the WebReport and then delivered to the input folder defined on the Manage WebReports Conversion page. The conversion tool should be configured to "watch" this directory. On finding a file, the tool should convert it, place the resultant document in the output folder and delete the input file. When the converted document appears in the output folder WebReports sends this to the defined export location and removes it from the output folder.
		</p>
		<P CLASS="body">
			<b>Steps to configure conversion</b>
			<ul>
				<li>Configure an external conversion engine (e.g. Adlib eXpress) to watch an input folder for new files that need conversion</li>
				<li>Configure the same conversion engine to store the converted documents in a specific output folder</li>
				<li>Configure the conversion engine to delete the source file from the input folder </li>
				<li>Establish the interval (this will be partly responsible for determining how quickly the converted file appear back in Content Server) the conversion engine should check the input folder </li>
				<li>Configure the conversion engine so that the destination file extension (e.g. .pdf) replaces the source type (e.g. .html, .doc, .xls) rather than appends the new extension onto the old one </li>
				<li>On the Content Server admin pages select the Manage WebReports Conversion option and specify the paths of the input folder and the output folder respectively. It is important that the Content Server server has the permission to write a file to the input folder and delete a file from the output folder. </li>
			</ul>
		</p>
		<P CLASS="body">
			<b>Steps to configure XML Job Ticket conversion</b>
			<ul>
				<li>Below the section to specify Input and Output directories, there is a checkbox to enable the use of XML Job Tickets with conversion</li>
				<li>Upon checking this box and enabling XML Job Tickets, the following will occur:<ul>
					<li>A second set of directories will appear to allow the user to specify an additional set of directories for when files are converted using XML Job Tickets</li>
					<li>The interface for XML Job Tickets will be enabled in the destination tab form a WebReport (provided the Use External Conversion Engine box is checked)</li>
				</ul></li>
				<li>Note:<ul>
					<li>For conversion to be enabled at all, the first set of conversion directories must be specified.  The additional set of directories for XML Job Tickets are optional, and are useful for servers running multiple instances of Content Server using different conversion methods (as Adlib Express, for example, only allows for file conversion with or without Job Tickets, it does not support both conversion methods simultaneously)</li>
					</ul>
				</ul></li>
			</ul>
		</p>
		<P CLASS="body"><b>Technical notes</b>
			<ul>
				<li>WebReports uses the Content Server cache to determine which converted file goes to which destination. As with any cache, it has a finite life which means, although unlikely, it is possible for converted files to be in the output folder that relate to an expired cache. In this case WebReports won't know where to send the files as the destination information is lost. This situation could occur if users have been exporting and converting on a system with agents disabled on all servers.  Enabling agents won't clear the backlog of files unless they have a current cache. As a rule, if anything is in the output folder more than an hour, it should be manually deleted.</li>
				<li>Content Server agents are used to look at the output folder and check for a converted file every 5 minutes. This means agents must be enabled for conversion to function.</li>
				<li>The exact time a file is written to the input folder, how often the conversion tool checks this folder, the time taken to do the actual conversion and the point this hits in the cycle of the 5 minute agent above will determine how long it takes for a file to appear in the export destination. This might vary from nearly instantaneous to 30 minutes depending on the system. </li>
				<li>Folders at a network location might be specified as a UNC, e.g.: <b>\\192.168.255.20\disk 1\PDF Conversion\input </b> .</li>
				<li>It is possible for an export to occur from any Content Server in a clustered environment. It is therefore essential that the input directory is defined on every machine in the cluster. The output folder is only monitored by the Content Server with the WebReports conversion agent running. It is therefore essential to specify the output folder on that server. It is, however, good practice to specify it on all Content Servers.</li>
			</ul>
		</p>
		
		<SCRIPT LANGUAGE="JavaScript">
			new AdminFooter().draw();
		</SCRIPT>
	</BODY>
</HTML>
